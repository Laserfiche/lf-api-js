# Copyright Laserfiche.
# Licensed under the MIT License. See LICENSE in the project root for license information.
name: build-test-publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NPM_API_CLIENT_V1_VERSION: '1.1.8'
  NPM_API_CLIENT_V2_VERSION: '1.0.7'
  NPM_CLIENT_CORE_VERSION: '1.1.16'
  NPM_JS_UTILS_VERSION: '4.0.11'
  NPM_API_JS_CLIENT_VERSION: '1.0.3'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  checks: write

jobs:
  build_libraries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Echo build number
        run: echo ${{github.run_id}}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install pnpm -g

      - name: PNPM install
        run: pnpm install

      - name: PNPM run build
        run: pnpm run build

      - name: Upload Build Artifact pnpm-js-utils-publish-artifact
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-js-utils-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./packages/lf-js-utils/dist
            ./packages/lf-js-utils/package.json
            ./packages/lf-js-utils/README.md

      - name: Upload Build Artifact pnpm-client-core-publish-artifact
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-client-core-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./packages/lf-api-client-core-js/dist
            ./packages/lf-api-client-core-js/package.json
            ./packages/lf-api-client-core-js/README.md

      - name: Upload build artifact pnpm-api-client-v1-publish-artifact
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-api-client-v1-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./packages/lf-repository-api-client-v1/dist
            ./packages/lf-repository-api-client-v1/package.json
            ./packages/lf-repository-api-client-v1/README.md

      - name: Upload build artifact pnpm-api-client-v2-publish-artifact
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-api-client-v2-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./packages/lf-repository-api-client-v2/dist
            ./packages/lf-repository-api-client-v2/package.json
            ./packages/lf-repository-api-client-v2/README.md

      - name: Upload build artifact pnpm-api-js-publish-artifact
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-api-js-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./packages/lf-api-js/dist
            ./packages/lf-api-js/cdn
            ./packages/lf-api-js/package.json
            ./packages/lf-api-js/README.md

      - name: Upload build artifact pnpm-api-js-types-publish-artifact
        uses: actions/upload-artifact@v4
        with:
          name: pnpm-api-js-types-publish-artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ./packages/lf-api-js/types

  test_libraries:
    runs-on: ubuntu-latest
    needs: [build_libraries]
    steps:
      - uses: actions/checkout@v4

      - name: Echo build number
        run: echo ${{github.run_id}}

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install pnpm -g

      - name: PNPM install
        run: pnpm install

      - name: PNPM run build
        run: pnpm run build

      - name: pnpm test lf-js-utils
        run: pnpm --filter @laserfiche/lf-js-utils run test:ci

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: JS Utils Jest Test Results
          path: ./packages/lf-js-utils/*.xml
          reporter: jest-junit
          only-summary: 'false'
          list-tests: 'failed'
          fail-on-error: 'false'

      - name: pnpm test lf-api-client-core on cloud
        id: test-cloud
        env:
          ACCESS_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY }}
          ACCESS_KEY_JSON: ${{ secrets.DEV_CA_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY_JSON }}
          SERVICE_PRINCIPAL_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_TESTOAUTHSERVICEPRINCIPAL_SERVICE_PRINCIPAL_KEY }}
        run: pnpm --filter @laserfiche/lf-api-client-core run test:Cloud

      - name: pnpm test lf-api-client-core on self-hosted
        if: always() && (steps.test-cloud.outcome == 'success' || steps.test-cloud.outcome == 'failure')
        env:
          REPOSITORY_ID: ${{ secrets.APISERVER_REPOSITORY_ID }}
          APISERVER_USERNAME: ${{ secrets.APISERVER_USERNAME }}
          APISERVER_PASSWORD: ${{ secrets.APISERVER_PASSWORD }}
          APISERVER_REPOSITORY_API_BASE_URL: ${{ secrets.APISERVER_REPOSITORY_API_BASE_URL }}
        run: pnpm --filter @laserfiche/lf-api-client-core run test:SelfHosted

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Client Core Jest Test Results
          path: ./packages/lf-api-client-core-js/*.xml
          reporter: jest-junit
          only-summary: 'false'
          list-tests: 'failed'
          fail-on-error: 'false'

      - name: pnpm test @laserfiche/lf-repository-api-client run all cloud tests
        env:
          ACCESS_KEY: ${{ secrets.DEV_US_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY }}
          SERVICE_PRINCIPAL_KEY: ${{ secrets.DEV_US_PUBLIC_USE_TESTOAUTHSERVICEPRINCIPAL_SERVICE_PRINCIPAL_KEY }}
          REPOSITORY_ID: ${{ secrets.DEV_US_PUBLIC_USE_REPOSITORY_ID_1 }}
          AUTHORIZATION_TYPE: ${{ secrets.AUTHORIZATION_TYPE }}
          TEST_HEADER: ${{ secrets.TEST_HEADER }}
        run: pnpm --filter @laserfiche/lf-repository-api-client run test:all

      - name: pnpm test @laserfiche/lf-repository-api-client run all self-hosted tests
        env:
          ACCESS_KEY: ${{ secrets.DEV_US_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY }}
          SERVICE_PRINCIPAL_KEY: ${{ secrets.DEV_US_PUBLIC_USE_TESTOAUTHSERVICEPRINCIPAL_SERVICE_PRINCIPAL_KEY }}
          REPOSITORY_ID: ${{ secrets.APISERVER_REPOSITORY_ID }}
          APISERVER_USERNAME: ${{ secrets.APISERVER_USERNAME }}
          APISERVER_PASSWORD: ${{ secrets.APISERVER_PASSWORD }}
          APISERVER_REPOSITORY_API_BASE_URL: ${{ secrets.APISERVER_REPOSITORY_API_BASE_URL }}
          AUTHORIZATION_TYPE: ${{ secrets.APISERVER_AUTHORIZATION_TYPE }}
          TEST_HEADER: ${{ secrets.TEST_HEADER }}
        run: pnpm --filter @laserfiche/lf-repository-api-client run test:all

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Api Client v1 Jest Test Results
          path: ./packages/lf-repository-api-client-v1/*.xml
          reporter: jest-junit
          only-summary: 'false'
          list-tests: 'failed'
          fail-on-error: 'false'

      - name: pnpm test lf-repository-api-client-v2 on cloud (node environment)
        id: test-cloud-node
        env:
          ACCESS_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY }}
          SERVICE_PRINCIPAL_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_TESTOAUTHSERVICEPRINCIPAL_SERVICE_PRINCIPAL_KEY }}
          REPOSITORY_ID: ${{ secrets.DEV_CA_PUBLIC_USE_REPOSITORY_ID_1 }}
          AUTHORIZATION_TYPE: ${{ secrets.AUTHORIZATION_TYPE }}
          TEST_HEADER: ${{ secrets.TEST_HEADER }}
        run: pnpm --filter @laserfiche/lf-repository-api-client-v2 run test:node

      - name: pnpm test lf-repository-api-client-v2 on cloud (browser environment)
        id: test-cloud-browser
        env:
          ACCESS_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY }}
          SERVICE_PRINCIPAL_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_TESTOAUTHSERVICEPRINCIPAL_SERVICE_PRINCIPAL_KEY }}
          REPOSITORY_ID: ${{ secrets.DEV_CA_PUBLIC_USE_REPOSITORY_ID_3 }}
          AUTHORIZATION_TYPE: ${{ secrets.AUTHORIZATION_TYPE }}
          TEST_HEADER: ${{ secrets.TEST_HEADER }}
        run: pnpm --filter @laserfiche/lf-repository-api-client-v2 run test:browser

      - name: Test report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Api Client v2 Jest Test Results
          path: ./packages/lf-repository-api-client-v2/*.xml
          reporter: jest-junit
          only-summary: 'false'
          list-tests: 'failed'
          fail-on-error: 'false'

      - name: pnpm test @laserfiche/lf-api-js run all tests
        run: pnpm --filter @laserfiche/lf-api-js run test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Api JS Jest Test Results
          path: ./packages/lf-api-js/*.xml
          reporter: jest-junit
          only-summary: 'false'
          list-tests: 'failed'
          fail-on-error: 'false'
          
  build_documentation:
    runs-on: ubuntu-latest
    needs: [build_libraries, test_libraries]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install pnpm -g

      - name: PNPM install
        run: pnpm install

      - name: PNPM run build
        run: pnpm run build

      - name: pnpm version
        working-directory: ./packages/lf-js-utils
        run: pnpm version ${{ env.NPM_JS_UTILS_VERSION }} --no-git-tag-version  --allow-same-version

      - name: pnpm version
        working-directory: ./packages/lf-api-client-core-js
        run: pnpm version ${{ env.NPM_CLIENT_CORE_VERSION }} --no-git-tag-version  --allow-same-version

      - name: pnpm version
        working-directory: ./packages/lf-repository-api-client-v1
        run: pnpm version ${{ env.NPM_API_CLIENT_V1_VERSION }} --no-git-tag-version  --allow-same-version

      - name: pnpm version
        working-directory: ./packages/lf-repository-api-client-v2
        run: pnpm version ${{ env.NPM_API_CLIENT_V2_VERSION }} --no-git-tag-version  --allow-same-version

      - name: pnpm version
        working-directory: ./packages/lf-api-js
        run: pnpm version ${{ env.NPM_API_JS_CLIENT_VERSION }} --no-git-tag-version  --allow-same-version

      - name: Generate typedoc docs
        run: pnpm run generate-docs

      - name: Upload a Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          # A file, directory or wildcard pattern that describes what to upload
          path: ./docs_temp/

  publish-all-preview-packages:
    runs-on: ubuntu-latest
    environment: preview
    if: ${{ github.run_attempt != 1 }}
    needs: [build_libraries, test_libraries, build_documentation]
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Artifact pnpm-js-utils-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-js-utils-publish-artifact
          path: ./packages/lf-js-utils

      - name: Download Build Artifact pnpm-client-core-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-client-core-publish-artifact
          path: ./packages/lf-api-client-core-js

      - name: Download Build Artifact pnpm-api-client-v1-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-client-v1-publish-artifact
          path: ./packages/lf-repository-api-client-v1

      - name: Download build artifact pnpm-api-client-v2-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-client-v2-publish-artifact
          path: ./packages/lf-repository-api-client-v2

      - name: Download build artifact pnpm-api-js-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-js-publish-artifact
          path: ./packages/lf-api-js

      - name: Download build artifact pnpm-api-js-types-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-js-types-publish-artifact
          path: ./packages/lf-api-js/types-npm-publish

      - name: Setup Node.js v20 environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install pnpm -g
        
      - name: Replace workspace^ with workspace* in lf-api-client-core-js
        working-directory: ./packages/lf-api-client-core-js
        run: sed -i 's/workspace:^/workspace:*/g' package.json

      - name: Replace workspace^ with workspace* in lf-repository-api-client-v1
        working-directory: ./packages/lf-repository-api-client-v1
        run: sed -i 's/workspace:^/workspace:*/g' package.json

      - name: Replace workspace^ with workspace* in lf-repository-api-client-v2
        working-directory: ./packages/lf-repository-api-client-v2
        run: sed -i 's/workspace:^/workspace:*/g' package.json

      - name: Replace workspace^ with workspace* in lf-api-js
        working-directory: ./packages/lf-api-js
        run: sed -i 's/workspace:^/workspace:*/g' package.json

      - name: set  as preview version from downloaded artifact
        run: echo "NpmJsUtilsPreviewPackageVersion=${{ env.NPM_JS_UTILS_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV

      - name: pnpm version NpmJsUtilsPreviewPackageVersion
        working-directory: ./packages/lf-js-utils
        run: pnpm version ${{ env.NpmJsUtilsPreviewPackageVersion }} --no-git-tag-version

      - name: set  as preview version from downloaded artifact
        run: echo "NpmClientCorePreviewPackageVersion=${{ env.NPM_CLIENT_CORE_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV

      - name: pnpm version NpmClientCorePreviewPackageVersion
        working-directory: ./packages/lf-api-client-core-js
        run: pnpm version ${{ env.NpmClientCorePreviewPackageVersion }} --no-git-tag-version

      - name: set NpmClientV1PreviewPackageVersion as preview version from downloaded artifact
        run: echo "NpmClientV1PreviewPackageVersion=${{ env.NPM_API_CLIENT_V1_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV

      - name: pnpm version NpmClientV1PreviewPackageVersion
        working-directory: ./packages/lf-repository-api-client-v1
        run: pnpm version ${{ env.NpmClientV1PreviewPackageVersion }} --no-git-tag-version

      - name: set NpmClientV2PreviewPackageVersion as preview version from downloaded artifact
        run: echo "NpmClientV2PreviewPackageVersion=${{ env.NPM_API_CLIENT_V2_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV

      - name: pnpm version NpmClientV2PreviewPackageVersion
        working-directory: ./packages/lf-repository-api-client-v2
        run: pnpm version ${{ env.NpmClientV2PreviewPackageVersion }} --no-git-tag-version

      - name: set NpmAPIClientPreviewPackageVersion as preview version from downloaded artifact
        run: echo "NpmAPIClientPreviewPackageVersion=${{ env.NPM_API_JS_CLIENT_VERSION }}--preview-${{ github.run_id }}" >> $GITHUB_ENV

      - name: pnpm version NpmAPIClientPreviewPackageVersion
        working-directory: ./packages/lf-api-js
        run: pnpm version ${{ env.NpmAPIClientPreviewPackageVersion }} --no-git-tag-version
        
      - name: pnpm version NpmAPIClientPreviewPackageVersion for types
        working-directory: ./packages/lf-api-js/types-npm-publish
        run: pnpm version ${{ env.NpmAPIClientPreviewPackageVersion }} --no-git-tag-version

      - name: PNPM install
        run: pnpm install --no-frozen-lockfile

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: pnpm publish all preview packages
        id: publish-preview-npm
        run: pnpm publish --recursive --access public --tag next --no-git-checks --force

      - name: pnpm publish @laserfiche/types-lf-api-js
        if: always() && (steps.publish-preview-npm.outcome == 'success' || steps.publish-preview-npm.outcome == 'failure')
        working-directory: ./packages/lf-api-js/types-npm-publish
        run: pnpm publish --access public --tag next --no-git-checks

  publish-updated-production-packages:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.run_attempt != 1 }}
    needs: [build_libraries, test_libraries, build_documentation]
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Artifact pnpm-js-utils-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-js-utils-publish-artifact
          path: ./packages/lf-js-utils

      - name: Download Build Artifact pnpm-client-core-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-client-core-publish-artifact
          path: ./packages/lf-api-client-core-js

      - name: Download Build Artifact pnpm-api-client-v1-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-client-v1-publish-artifact
          path: ./packages/lf-repository-api-client-v1

      - name: Download build artifact pnpm-api-client-v2-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-client-v2-publish-artifact
          path: ./packages/lf-repository-api-client-v2

      - name: Download build artifact pnpm-api-js-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-js-publish-artifact
          path: ./packages/lf-api-js

      - name: Download build artifact pnpm-api-js-types-publish-artifact
        uses: actions/download-artifact@v4
        with:
          name: pnpm-api-js-types-publish-artifact
          path: ./packages/lf-api-js/types-npm-publish

      - name: Setup Node.js v20 environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install pnpm -g

      - name: pnpm version lf-js-utils
        working-directory: ./packages/lf-js-utils
        run: pnpm version ${{ env.NPM_JS_UTILS_VERSION }} --no-git-tag-version --allow-same-version

      - name: pnpm version lf-api-client-core-js
        working-directory: ./packages/lf-api-client-core-js
        run: pnpm version ${{ env.NPM_CLIENT_CORE_VERSION }} --no-git-tag-version --allow-same-version

      - name: pnpm version lf-repository-api-client-v1
        working-directory: ./packages/lf-repository-api-client-v1
        run: pnpm version ${{ env.NPM_API_CLIENT_V1_VERSION }} --no-git-tag-version --allow-same-version

      - name: pnpm version lf-repository-api-client-v2
        working-directory: ./packages/lf-repository-api-client-v2
        run: pnpm version ${{ env.NPM_API_CLIENT_V2_VERSION }} --no-git-tag-version --allow-same-version

      - name: pnpm version lf-api-js
        working-directory: ./packages/lf-api-js
        run: pnpm version ${{ env.NPM_API_JS_CLIENT_VERSION }} --no-git-tag-version --allow-same-version

      - name: pnpm version types-lf-api-js
        working-directory: ./packages/lf-api-js/types-npm-publish
        run: pnpm version ${{ env.NPM_API_JS_CLIENT_VERSION }} --no-git-tag-version --allow-same-version

      - name: PNPM install
        run: pnpm install

      - name: Set publishing config
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: pnpm publish all packages that version changed
        id: publish-prod-npm
        run: pnpm publish --recursive --access public  --tag latest --no-git-checks

      - name: pnpm publish @laserfiche/types-lf-api-js
        if: always() && (steps.publish-prod-npm.outcome == 'success' || steps.publish-prod-npm.outcome == 'failure')
        working-directory: ./packages/lf-api-js/types-npm-publish
        run: pnpm publish --access public --tag latest --no-git-checks

  publish_documentation:
    runs-on: ubuntu-latest
    if: ${{ github.run_attempt != 1 }}
    needs: [build_libraries, test_libraries, build_documentation]
    environment: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages